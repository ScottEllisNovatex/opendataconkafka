# Use a minimal distro as we are going to use docker anyway.
# We could run a Python kafka consumer on this instance so that we can capture the messages sent from OEL7 to the kafka instance
# Python is part of minimal anyway.

language: python

git:
  depth: false # We might not need anything from git at this level?
  
services:
  - docker

env:
  - BUILD_CONFIG=Release

dist: bionic

branches:
  only:
    - master

before_install:
  - echo "Testing Docker Hub credentials"
  
install:
  - export SRC_DIR=$(pwd)
  - mkdir -p build/install && cd build
  - export INSTALL_PREFIX=$(pwd)/install
  - DOCK=$(docker run -d -v $(pwd):/mnt/build --rm -ti library/oraclelinux:7.6)
  # Need -y option on everything so it does not wait for input!!
  - docker exec -i $DOCK sh -c '
        yum install -y oracle-softwarecollection-release-el7
        /usr/bin/ol_yum_configure.sh
        yum repolist
        yum install -y scl-utils glibc-devel iso-codes redhat-rpm-config libmicrohttpd        
      '
  - export RUN="docker exec --interactive --workdir /mnt/build $DOCK"
  - export STOP="docker stop $DOCK"
    
script:
  - $RUN ls -lsr
  - $STOP

deploy:
     
  # Upload testing log files and deploy packages for all develop builds. Searches recursively for all .log files.
  provider: releases
  api_key:
    secure:    15MT0ZY2lVjvl7cdz+h6RFVTIYpFHuMsNAoIwJwI4iLQdj9ybdq4t9VrqkMZ7THlhgoYXYJKbXmPJmmt8/s1x5tktkbhdu2AU3e0sOYluO8ciBUvBUt5Jak6DAZB6Anjvj/tQqJb5nldnAfZmgnK/5A1Qyn33GBpnb6j2W4hiINR88zPMNpk0q2MF2VKdcFDLgNgbwDgfwEKcWbuxNJ0/g6aJDfS6aSyqPnAX8S/fS0arJmdMwIiAiiVKLBtyD5L6PVhbeP+pPaFD+uEuB+hSyO2tTEl827J78Fe4PgWkmd6xuTkCcObvK90vOv+1sXHA+2mIUbpvceREtM6E2uiofTzhEvoNPd4MYbmk9EMbmofsjorM5807F/Lx3yT7bcn2SjFMbDT7KSvFXLFD2HPLURHKFQ7cveYU+4KofVNhR8jWSOgDYljIskLUrycaysKqs2LD+sgBL9j/9O8HZTJx0nG5juBuHZcKon775T097CDMJFu9GbEw808GDcmX85dZDg1xlldNZAtB1CBw+kYrsApqSv8QWeVSANsNpJf9IvdszQRaLjvalKohDLEA7M1QRcaDpjXzTMz3+bqEokjUgmbLSlzjxuWoMv5PfRZHXPJDBVPnECyoXbF8+b89xHQgLUnr598S3uZEWNB2BcSEky2qjoaUqeJQeeD/AUDY1Y=
  file_glob: true
  file: 
    - ./**/*.log
    - opendatacon-*.sh
  name: "opendatacon_draft ${TRAVIS_TAG}"
  skip_cleanup: true
  draft: true
  overwrite: true
  on:
    branch: develop
   

